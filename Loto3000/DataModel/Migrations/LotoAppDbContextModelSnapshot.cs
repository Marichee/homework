// <auto-generated />
using DataModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataModels.Migrations
{
    [DbContext(typeof(LotoAppDbContext))]
    partial class LotoAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataModels.SessionDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Numbers");

                    b.Property<string>("WinnerBoard");

                    b.HasKey("Id");

                    b.ToTable("Sessions");

                    b.HasData(
                        new { Id = 1, Numbers = "01,02,03,04,05,06,07 ", WinnerBoard = "#Marija Prosheva Prize:Car" },
                        new { Id = 2 }
                    );
                });

            modelBuilder.Entity("DataModels.TicketsDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SessionId");

                    b.Property<string>("Ticket");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("SessionId");

                    b.HasIndex("UserId");

                    b.ToTable("Tickets");

                    b.HasData(
                        new { Id = 1, SessionId = 2, Ticket = "01,02,03,04,05,06,07 ", UserId = 1 },
                        new { Id = 2, SessionId = 2, Ticket = "01,02,03,04,05,06,07 ", UserId = 1 }
                    );
                });

            modelBuilder.Entity("DataModels.UserDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Password");

                    b.Property<int>("Role");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new { Id = 1, FirstName = "Marija", LastName = "Prosheva", Password = "!#/)zW??C?JJ??", Role = 1, Username = "administrator" },
                        new { Id = 2, Email = "elena@gmail.com", FirstName = "Elena", LastName = "Ristova", Password = "?P?<?O????}(?r", Role = 2, Username = "elichka" }
                    );
                });

            modelBuilder.Entity("DataModels.TicketsDto", b =>
                {
                    b.HasOne("DataModels.SessionDto", "Session")
                        .WithMany("Tickets")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DataModels.UserDto", "User")
                        .WithMany("TicketList")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
